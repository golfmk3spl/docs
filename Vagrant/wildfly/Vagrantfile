# -*- mode: ruby -*-
# vi: set ft=ruby :

# Definicoes basicas
box          = "centos/7"
nguests      = 3
memory       = 4096/nguests # memory per box in MB
cpuCap       = 100/nguests
hostBaseName = "srv"
hostBaseIp   = "10.99.1.10"

Vagrant.configure("2") do |config|
  # Repeticao para criar cada uma das VMs definidas em nguests
  (1..nguests).each do |i|
    hostname = hostBaseName + i.to_s
    ipAddress = hostBaseIp + i.to_s
    config.vm.synced_folder ".", "/nfs", id: "core", :nfs => true,  :mount_options   => ['nolock,vers=3,udp']
    config.vm.define hostname do |node|
      node.vm.box = box
      node.vm.box_download_insecure = true
      node.vm.box_check_update = false
      node.vm.hostname = hostname
      node.vm.network "private_network", ip: ipAddress
      node.vm.provider "virtualbox" do |vb|
          vb.name = hostname
          vb.memory = memory.to_s
          vb.cpus = 2
          vb.customize ["modifyvm", :id, "--cpuexecutioncap", cpuCap, "--memory", memory.to_s]
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
          vb.customize ["modifyvm", :id, "--ioapic", "on"]
      end
      # Executando tarefas pos instalacao
      #node.vm.provision :shell, path: "scripts/bootstrap.sh", args: [nguests, i, memory, ipAddressStart]

      #node.vm.provision "shell", inline: <<-SHELL
      #  cp /vagrant/data/TRF1.repo /etc/yum.repos.d/
      #  rm -rf /etc/yum.repos.d/CentOS*
      #  #yum clean all
      #  #yum update -y
      #SHELL

      #  config.vm.provision "ansible" do |ansible|
      #    ansible.compatibility_mode = "2.0"
      #    ansible.playbook = "playbook.yml"
      #    ansible.become = true
      #    ansible.tags="yumrepo, updateos, vagrant"#,pje
      #  end
    end
  end
end